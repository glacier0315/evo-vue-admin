<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.glacier.modules.sys.mapper.MenuMapper">

    <resultMap id="BaseResultMap" type="com.glacier.modules.sys.entity.Menu">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="component" jdbcType="VARCHAR" property="component"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="visible" jdbcType="INTEGER" property="visible"/>
        <result column="is_frame" jdbcType="INTEGER" property="isFrame"/>
        <result column="permission" jdbcType="VARCHAR" property="permission"/>
        <result column="parent_id" jdbcType="VARCHAR" property="parentId"/>
        <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="del_flag" jdbcType="VARCHAR" property="delFlag"/>
    </resultMap>

    <sql id="base_columns">
        a.id, a.name, a.path, a.component, a.permission, a.type, a.status, a.visible, a.order_num, a.icon, a.parent_id, a.is_frame,
        a.create_by, a.create_date, a.update_by, a.update_date, a.del_flag
    </sql>

    <sql id="join_columns">
    </sql>

    <sql id="joins">
    </sql>

    <update id="deleteByPrimaryKey" parameterType="java.lang.String">
        update sys_menu a
        set a.del_flag='1'
        where a.id = #{id}
    </update>

    <insert id="insert" parameterType="com.glacier.modules.sys.entity.Menu">
        insert into sys_menu (id, name, path,
                              component, icon, type,
                              status, visible, is_frame, permission,
                              parent_id, order_num, create_by,
                              create_date, update_by, update_date,
                              del_flag)
        values (#{id}, #{name}, #{path},
                #{component}, #{icon}, #{type},
                #{status}, #{visible}, #{isFrame}, #{permission},
                #{parentId}, #{orderNum}, #{createBy},
                #{createDate}, #{updateBy}, #{updateDate},
                #{delFlag})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.glacier.modules.sys.entity.Menu">
        update sys_menu
        set name        = #{name},
            path        = #{path},
            component   = #{component},
            icon        = #{icon},
            type        = #{type},
            status      = #{status},
            visible     = #{visible},
            is_frame    = #{isFrame},
            permission  = #{permission},
            parent_id   = #{parentId},
            order_num   = #{orderNum},
            update_by   = #{updateBy},
            update_date = #{updateDate}
        where id = #{id}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="base_columns"/>
        from sys_menu a
        where id = #{id}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="base_columns"/>
        from sys_menu a
        <where>
            a.del_flag='0'
        </where>
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        select
        <include refid="base_columns"/>
        from sys_menu a
        <where>
            a.del_flag='0'
            <if test="userId != null and userId !='' ">
                and exists (
                select 1 from sys_role_menu b
                inner join sys_user_role c on b.role_id=c.role_id
                where b.menu_id=a.id
                and exists (
                select 1 from sys_role r
                where r.del_flag='0'
                and r.id=b.role_id
                and r.status = '1'
                )
                and c.user_id=#{userId}
                )
            </if>
            <if test="roleId != null and roleId !='' ">
                and exists (
                select 1 from sys_role_menu b
                inner join sys_role r on b.role_id=r.id
                where b.menu_id=a.id
                and r.del_flag='0'
                and r.status = '1'
                and b.role_id=#{roleId}
                )
            </if>
            <if test="typeList != null and typeList.size > 0">
                and a.type in
                <foreach collection="typeList" item="type" open="(" separator="," close=")">
                    #{type}
                </foreach>
            </if>
            <if test="status != null">
                and a.status = #{status}
            </if>
        </where>
    </select>

    <select id="findMenuIdsByRoleId" resultType="java.lang.String">
        select a.id
        from sys_menu a
        inner join sys_role_menu b on a.id=b.menu_id
        <where>
            a.del_flag='0'
            and exists (
            select 1 from sys_role r
            where r.del_flag='0'
            and r.id=b.role_id
            and r.status = '1'
            and r.id = #{roleId}
            )
        </where>
    </select>
</mapper>
