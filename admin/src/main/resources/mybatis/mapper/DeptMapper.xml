<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.glacier.modules.sys.mapper.DeptMapper">

    <resultMap id="BaseResultMap" type="com.glacier.modules.sys.entity.Dept">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
        <result column="grade" jdbcType="INTEGER" property="grade"/>
        <result column="parent_id" jdbcType="VARCHAR" property="parentId"/>
        <result column="parent_name" jdbcType="VARCHAR" property="parentName"/>
        <result column="parent_ids" jdbcType="VARCHAR" property="parentIds"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="del_flag" jdbcType="VARCHAR" property="delFlag"/>
    </resultMap>

    <sql id="base_columns">
        a.id, a.name, a.code, a.grade, a.type, a.status, a.order_num, a.parent_id, a.parent_name, a.parent_ids,
        a.create_by, a.create_date, a.update_by, a.update_date, a.del_flag
    </sql>

    <sql id="join_columns">
    </sql>

    <sql id="joins">
    </sql>

    <update id="deleteByPrimaryKey">
        update sys_dept a
        set a.del_flag='1'
        <where>
            a.del_flag='0'
            and (a.id =#{id} or a.parent_ids like concat('%,',#{id},',%') )
        </where>
    </update>

    <insert id="insert" parameterType="com.glacier.modules.sys.entity.Dept">
        insert into sys_dept (id, name, code, type, status, order_num, grade, parent_id, parent_name, parent_ids,
                              create_by, create_date, update_by, update_date, del_flag)
        values (#{id}, #{name}, #{code}, #{type}, #{status}, #{orderNum}, #{grade}, #{parentId}, #{parentName},
                #{parentIds},
                #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{delFlag})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.glacier.modules.sys.entity.Dept">
        update sys_dept
        set name        = #{name},
            code        = #{code},
            type        = #{type},
            status      = #{status},
            order_num   = #{orderNum},
            grade       = #{grade},
            parent_id   = #{parentId},
            parent_name = #{parentName},
            parent_ids  = #{parentIds},
            update_by   = #{updateBy},
            update_date = #{updateDate}
        where id = #{id}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="base_columns"/>
        from sys_dept a
        where id = #{id}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="base_columns"/>
        from sys_dept a
        <where>
            a.del_flag='0'
        </where>
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        select
        <include refid="base_columns"/>
        from sys_dept a
        <where>
            a.del_flag='0'
        </where>
    </select>

    <select id="findByRoleId" resultType="com.glacier.modules.sys.entity.Dept">
        select
        <include refid="base_columns"/>
        from sys_dept a
        inner join sys_role_dept b on a.id=b.dept_id
        <where>
            a.del_flag='0'
            and b.role_id = #{roleId}
        </where>
    </select>

    <select id="findByUserId" resultType="com.glacier.modules.sys.entity.Dept">
        select
        <include refid="base_columns"/>
        from sys_dept a
        inner join sys_role_dept b on a.id=b.dept_id
        inner join sys_user_role c on c.role_id=b.role_id
        <where>
            a.del_flag='0'
            and exists (
            select 1 from t_role r where r.del_flag='0' and r.id=b.role_id and r.status = '1'
            )
            and c.user_id = #{userId}
        </where>
    </select>
</mapper>
